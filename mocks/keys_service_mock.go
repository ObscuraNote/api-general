// Code generated by MockGen. DO NOT EDIT.
// Source: internal/keys/service/service.go
//
// Generated by this command:
//
//	mockgen -source=internal/keys/service/service.go -destination=./mocks/keys_service_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dto "github.com/ObscuraNote/api-general/internal/keys/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockKeysService is a mock of KeysService interface.
type MockKeysService struct {
	ctrl     *gomock.Controller
	recorder *MockKeysServiceMockRecorder
	isgomock struct{}
}

// MockKeysServiceMockRecorder is the mock recorder for MockKeysService.
type MockKeysServiceMockRecorder struct {
	mock *MockKeysService
}

// NewMockKeysService creates a new mock instance.
func NewMockKeysService(ctrl *gomock.Controller) *MockKeysService {
	mock := &MockKeysService{ctrl: ctrl}
	mock.recorder = &MockKeysServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeysService) EXPECT() *MockKeysServiceMockRecorder {
	return m.recorder
}

// AddKey mocks base method.
func (m *MockKeysService) AddKey(note dto.KeyImput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddKey", note)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddKey indicates an expected call of AddKey.
func (mr *MockKeysServiceMockRecorder) AddKey(note any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddKey", reflect.TypeOf((*MockKeysService)(nil).AddKey), note)
}

// DeleteKey mocks base method.
func (m *MockKeysService) DeleteKey(input dto.DeleteKeyInput) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteKey", input)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteKey indicates an expected call of DeleteKey.
func (mr *MockKeysServiceMockRecorder) DeleteKey(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteKey", reflect.TypeOf((*MockKeysService)(nil).DeleteKey), input)
}

// GetKeysByUser mocks base method.
func (m *MockKeysService) GetKeysByUser(ctx context.Context, auth dto.AuthInput) ([]dto.KeyOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeysByUser", ctx, auth)
	ret0, _ := ret[0].([]dto.KeyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKeysByUser indicates an expected call of GetKeysByUser.
func (mr *MockKeysServiceMockRecorder) GetKeysByUser(ctx, auth any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeysByUser", reflect.TypeOf((*MockKeysService)(nil).GetKeysByUser), ctx, auth)
}
